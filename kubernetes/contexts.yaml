---
contexts:
  _default:
    start_kube_job:
      script_types:
        python3:
          image: python:3
          command_prefix: [ "python", "-c" ]
          shell_prefix: [ "bash", "-c" ]
        python2:
          image: python:2
          command_prefix: [ "python", "-c" ]
          shell_prefix: [ "bash", "-c" ]
        python:
          image: python:latest
          command_prefix: [ "python", "-c" ]
          shell_prefix: [ "bash", "-c" ]
        bash:
          image: bash:latest
          shell_prefix: [ "bash", "-c" ]
        node:
          image: node:latest
          command_prefix: [ "node", "-e" ]
          shell_prefix: [ "bash", "-c" ]
        git:
          image: alpine/git:latest
          command_prefix: []
          shell_entry: [ "/bin/sh", "-c" ]
        tf:
          image: hashicorp/terraform:light
          command_prefix: []
          shell_entry: [ "/bin/sh", "-c" ]
        helm:
          image: alpine/helm:latest
          command_prefix: []
          shell_entry: [ "/bin/sh", "-c" ]
        gcloud:
          image: google/cloud-sdk:latest
          command_prefix: []
          shell_entry: [ "/bin/bash", "-c" ]

      predefined_steps:
        npm-token-with-kms:
          name: npm-token-with-kms
          type: gcloud
          workingDir: /honeydipper/repo
          shell: |
            echo -n "$NPM_TOKEN_OPAQUE" |
            base64 --decode |
            gcloud --project "$KMS_PROJECT" kms decrypt \
              --keyring "$KMS_KEYRING" \
              --key "$KMS_KEY" \
              --location "$KMS_LOCATION" \
              --ciphertext-file - \
              --plaintext-file .npmrc
          env:
            - name: NPM_TOKEN_OPAQUE
              value: $ctx.npm_token_opaque,"$sysData.npm.npm_token_opaque,sysData.npm_token_opaque"
            - name: KMS_PROJECT
              value: $ctx.npm_kms_project,"$sysData.npm.kms_project,sysData.kms_project,sysData.project"
            - name: KMS_KEYRING
              value: $ctx.npm_kms_keyring,"$sysData.npm.kms_keyring,sysData.kms_keyring"
            - name: KMS_KEY
              value: $ctx.npm_kms_key,"$sysData.npm.kms_key,sysData.kms_key"
            - name: KMS_LOCATION
              value: $ctx.npm_kms_location,"$sysData.npm.kms_location,sysData.kms_location"

        ssh-key-with-kms:
          name: ssh-key-with-kms
          type: gcloud
          shell: |
            mkdir -p /honeydipper/.ssh
            echo -n "$SSH_KEY_OPAQUE" |
            base64 --decode |
            gcloud --project "$KMS_PROJECT" kms decrypt \
              --keyring "$KMS_KEYRING" \
              --key "$KMS_KEY" \
              --location "$KMS_LOCATION" \
              --ciphertext-file - \
              --plaintext-file /honeydipper/.ssh/id_rsa
            chmod 600 /honeydipper/.ssh/id_rsa
          env:
            - name: SSH_KEY_OPAQUE
              value: '{{ default `{{ .sysData.ssh_key_opaque }}` .ctx.ssh_key_opaque }}'
            - name: KMS_PROJECT
              value: '{{ default `{{ coalesce .sysData.kms_project .sysData.project }}` .ctx.kms_project }}'
            - name: KMS_KEYRING
              value: '{{ default `{{ .sysData.kms_keyring }}` .ctx.kms_keyring }}'
            - name: KMS_KEY
              value: '{{ default `{{ .sysData.kms_key }}` .ctx.kms_key }}'
            - name: KMS_LOCATION
              value: '{{ default `{{ .sysData.kms_location }}` .ctx.kms_location }}'

        git-clone:
          name: git-clone
          type: git
          shell: |
            set -eo pipefail
            ssh-keyscan github.com > /etc/ssh/ssh_known_hosts 2>/dev/null
            ssh-agent sh -c "ssh-add /honeydipper/.ssh/id_rsa 2>/dev/null; git clone --single-branch ${BRANCH:+--branch} $BRANCH $REPO repo"
          volumes:
            - mountPath: /honeydipper/.ssh/id_rsa
              subPath: id_rsa
              volume:
                name: git-deploy-key
                secret:
                  defaultMode: 384
                  secretName: "{{ default `{{ .sysData.git_key_secret }}` .ctx.git_key_secret }}"
          env:
            - name: REPO
              value: '{{ default `{{ .sysData.git_url }}` .ctx.git_url }}'
            - name: BRANCH
              value: '{{ default "" .ctx.git_ref }}'

        git-clone-opaque-key:
          name: git-clone
          type: git
          shell: |
            set -eo pipefail
            ssh-keyscan github.com > /etc/ssh/ssh_known_hosts 2>/dev/null
            ssh-agent sh -c "ssh-add /honeydipper/.ssh/id_rsa 2>/dev/null; git clone --single-branch ${BRANCH:+--branch} $BRANCH $REPO repo"
          env:
            - name: REPO
              value: '{{ default `{{ .sysData.git_url }}` .ctx.git_url }}'
            - name: BRANCH
              value: '{{ default "" .ctx.git_ref }}'

        git-push:
          name: git-push
          type: git
          shell: |
            set -eo pipefail
            CURRENT_BRANCH="$(git rev-parse --abbrev-ref HEAD)"
            if ! git diff --exit-code "${CURRENT_BRANCH}..origin/${CURRENT_BRANCH}"; then
              ssh-keyscan github.com > /etc/ssh/ssh_known_hosts 2>/dev/null
              ssh-agent sh -c "ssh-add /honeydipper/.ssh/id_rsa 2>/dev/null; git checkout -b $HEAD_BRANCH; git push origin $HEAD_BRANCH ${FORCE}"
            else
              echo No changes, skipping git push!
            fi
          workingDir: /honeydipper/repo
          volumes:
            - mountPath: /honeydipper/.ssh/id_rsa
              subPath: id_rsa
              volume:
                name: git-deploy-key
                secret:
                  defaultMode: 384
                  secretName: "{{ default `{{ .sysData.git_key_secret }}` .ctx.git_key_secret }}"
          env:
            - name: REPO
              value: '{{ default `{{ .sysData.git_url }}` .ctx.git_url }}'
            - name: HEAD_BRANCH
              value: $ctx.head_branch,"honeydipper-push"
            - name: FORCE
              value: '{{ if .ctx.force }}--force-with-lease{{ end }}'

        git-push-opaque-key:
          name: git-push
          type: git
          shell: |
            set -eo pipefail
            CURRENT_BRANCH="$(git rev-parse --abbrev-ref HEAD)"
            if ! git diff --exit-code "${CURRENT_BRANCH}..origin/${CURRENT_BRANCH}"; then
              ssh-keyscan github.com > /etc/ssh/ssh_known_hosts 2>/dev/null
              ssh-agent sh -c "ssh-add /honeydipper/.ssh/id_rsa 2>/dev/null; git checkout -b $HEAD_BRANCH; git push origin $HEAD_BRANCH ${FORCE}"
            else
              echo No changes, skipping git push!
            fi
          workingDir: /honeydipper/repo
          env:
            - name: REPO
              value: '{{ default `{{ .sysData.git_url }}` .ctx.git_url }}'
            - name: HEAD_BRANCH
              value: $ctx.head_branch,"honeydipper-push"
            - name: FORCE
              value: '{{ if .ctx.force }}--force-with-lease{{ end }}'

        local_kubeconfig:
          name: set-kube-local
          type: bash
          shell: test -f $KUBECONFIG && rm -f $KUBECONFIG

      predefined_env: {}
      predefined_volumes: {}

      env+:
        - name: KUBECONFIG
          value: /honeydipper/.config/kubeconfig
